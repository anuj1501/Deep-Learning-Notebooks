{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"intro_to_pandas","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyPFCXO+22vnFmudRv0Scyqs"},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"0EDWF6VHQMhp","colab_type":"code","outputId":"cc93f666-98ba-4a49-f348-bd050e2b75d7","executionInfo":{"status":"ok","timestamp":1584513307810,"user_tz":-330,"elapsed":4741,"user":{"displayName":"Anuj Raghani","photoUrl":"","userId":"06136699931339747993"}},"colab":{"base_uri":"https://localhost:8080/","height":260}},"source":["import pandas as pd\n","import os\n","df = pd.read_csv(\"https://data.heatonresearch.com/data/t81-558/auto-mpg.csv\")\n","\n","df.info()"],"execution_count":1,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 398 entries, 0 to 397\n","Data columns (total 9 columns):\n","mpg             398 non-null float64\n","cylinders       398 non-null int64\n","displacement    398 non-null float64\n","horsepower      398 non-null object\n","weight          398 non-null int64\n","acceleration    398 non-null float64\n","year            398 non-null int64\n","origin          398 non-null int64\n","name            398 non-null object\n","dtypes: float64(3), int64(4), object(2)\n","memory usage: 28.1+ KB\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"x9m0BWzRS3ls","colab_type":"code","outputId":"82b38494-f7f8-4d1c-9268-75b84c989c96","executionInfo":{"status":"ok","timestamp":1584513307815,"user_tz":-330,"elapsed":4735,"user":{"displayName":"Anuj Raghani","photoUrl":"","userId":"06136699931339747993"}},"colab":{"base_uri":"https://localhost:8080/","height":343}},"source":[" display(df[0:5])"],"execution_count":2,"outputs":[{"output_type":"display_data","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mpg</th>\n","      <th>cylinders</th>\n","      <th>displacement</th>\n","      <th>horsepower</th>\n","      <th>weight</th>\n","      <th>acceleration</th>\n","      <th>year</th>\n","      <th>origin</th>\n","      <th>name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>18.0</td>\n","      <td>8</td>\n","      <td>307.0</td>\n","      <td>130</td>\n","      <td>3504</td>\n","      <td>12.0</td>\n","      <td>70</td>\n","      <td>1</td>\n","      <td>chevrolet chevelle malibu</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>15.0</td>\n","      <td>8</td>\n","      <td>350.0</td>\n","      <td>165</td>\n","      <td>3693</td>\n","      <td>11.5</td>\n","      <td>70</td>\n","      <td>1</td>\n","      <td>buick skylark 320</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>18.0</td>\n","      <td>8</td>\n","      <td>318.0</td>\n","      <td>150</td>\n","      <td>3436</td>\n","      <td>11.0</td>\n","      <td>70</td>\n","      <td>1</td>\n","      <td>plymouth satellite</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>16.0</td>\n","      <td>8</td>\n","      <td>304.0</td>\n","      <td>150</td>\n","      <td>3433</td>\n","      <td>12.0</td>\n","      <td>70</td>\n","      <td>1</td>\n","      <td>amc rebel sst</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>17.0</td>\n","      <td>8</td>\n","      <td>302.0</td>\n","      <td>140</td>\n","      <td>3449</td>\n","      <td>10.5</td>\n","      <td>70</td>\n","      <td>1</td>\n","      <td>ford torino</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    mpg  cylinders  displacement  ... year  origin                       name\n","0  18.0          8         307.0  ...   70       1  chevrolet chevelle malibu\n","1  15.0          8         350.0  ...   70       1          buick skylark 320\n","2  18.0          8         318.0  ...   70       1         plymouth satellite\n","3  16.0          8         304.0  ...   70       1              amc rebel sst\n","4  17.0          8         302.0  ...   70       1                ford torino\n","\n","[5 rows x 9 columns]"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"2anX0hYOTCBa","colab_type":"code","outputId":"047343d0-373f-42d8-bac3-a357a4b0e873","executionInfo":{"status":"ok","timestamp":1584513307816,"user_tz":-330,"elapsed":4727,"user":{"displayName":"Anuj Raghani","photoUrl":"","userId":"06136699931339747993"}},"colab":{"base_uri":"https://localhost:8080/","height":159}},"source":["#select columns with data type int and float\n","df = df.select_dtypes(include=['int','float'])\n","\n","headers = list(df.columns)\n","fields = []\n","\n","for field in headers:\n","  fields.append({\n","      'name':field,\n","      'mean':df[field].mean(),\n","      'var':df[field].var(),\n","      'sdev':df[field].std()\n","  })\n","\n","for field in fields:\n","  print(field)"],"execution_count":3,"outputs":[{"output_type":"stream","text":["{'name': 'mpg', 'mean': 23.514572864321615, 'var': 61.089610774274405, 'sdev': 7.815984312565782}\n","{'name': 'cylinders', 'mean': 5.454773869346734, 'var': 2.8934154399199943, 'sdev': 1.7010042445332094}\n","{'name': 'displacement', 'mean': 193.42587939698493, 'var': 10872.199152247364, 'sdev': 104.26983817119581}\n","{'name': 'weight', 'mean': 2970.424623115578, 'var': 717140.9905256768, 'sdev': 846.8417741973271}\n","{'name': 'acceleration', 'mean': 15.568090452261291, 'var': 7.604848233611381, 'sdev': 2.7576889298126757}\n","{'name': 'year', 'mean': 76.01005025125629, 'var': 13.672442818627143, 'sdev': 3.697626646732623}\n","{'name': 'origin', 'mean': 1.5728643216080402, 'var': 0.6432920268850575, 'sdev': 0.8020548777266163}\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"9tqS-Y7TUrwd","colab_type":"code","outputId":"c704ab98-cccc-4ec4-e438-a8b20eac7b65","executionInfo":{"status":"ok","timestamp":1584513307817,"user_tz":-330,"elapsed":4718,"user":{"displayName":"Anuj Raghani","photoUrl":"","userId":"06136699931339747993"}},"colab":{"base_uri":"https://localhost:8080/","height":263}},"source":["\n","df2 = pd.DataFrame(fields)\n","df2"],"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>name</th>\n","      <th>mean</th>\n","      <th>var</th>\n","      <th>sdev</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>mpg</td>\n","      <td>23.514573</td>\n","      <td>61.089611</td>\n","      <td>7.815984</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>cylinders</td>\n","      <td>5.454774</td>\n","      <td>2.893415</td>\n","      <td>1.701004</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>displacement</td>\n","      <td>193.425879</td>\n","      <td>10872.199152</td>\n","      <td>104.269838</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>weight</td>\n","      <td>2970.424623</td>\n","      <td>717140.990526</td>\n","      <td>846.841774</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>acceleration</td>\n","      <td>15.568090</td>\n","      <td>7.604848</td>\n","      <td>2.757689</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>year</td>\n","      <td>76.010050</td>\n","      <td>13.672443</td>\n","      <td>3.697627</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>origin</td>\n","      <td>1.572864</td>\n","      <td>0.643292</td>\n","      <td>0.802055</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["           name         mean            var        sdev\n","0           mpg    23.514573      61.089611    7.815984\n","1     cylinders     5.454774       2.893415    1.701004\n","2  displacement   193.425879   10872.199152  104.269838\n","3        weight  2970.424623  717140.990526  846.841774\n","4  acceleration    15.568090       7.604848    2.757689\n","5          year    76.010050      13.672443    3.697627\n","6        origin     1.572864       0.643292    0.802055"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"code","metadata":{"id":"R1PhE7GLU8zz","colab_type":"code","outputId":"8bb90204-5c8b-48fd-accc-a251a4abe719","executionInfo":{"status":"ok","timestamp":1584513307818,"user_tz":-330,"elapsed":4711,"user":{"displayName":"Anuj Raghani","photoUrl":"","userId":"06136699931339747993"}},"colab":{"base_uri":"https://localhost:8080/","height":191}},"source":["import os\n","import pandas as pd\n","\n","df1 = pd.read_csv(\"https://data.heatonresearch.com/data/t81-558/auto-mpg.csv\",na_values=['NA','?'])\n","\n","df1[\"horsepower\"] = df1.fillna(df1[\"horsepower\"].median())\n","\n","df1.isna().sum()"],"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["mpg             0\n","cylinders       0\n","displacement    0\n","horsepower      0\n","weight          0\n","acceleration    0\n","year            0\n","origin          0\n","name            0\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"code","metadata":{"id":"yYs0LIXDSfnl","colab_type":"code","colab":{}},"source":["#remove rows where values in column \"mfg\" are greater/less than 2 stds\n","import numpy as np\n","\n","def remove_outliers(df,name,sd):\n","  drop_rows = df.index[(np.abs(df[name] - df[name].mean()) >= \n","                        sd * df[name].std())]\n","  df.drop(drop_rows,axis=0,inplace=True)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"16WXFIfhXPD8","colab_type":"code","outputId":"70051abc-2e1b-4497-ee88-f6dbad5aeecd","executionInfo":{"status":"ok","timestamp":1584513307819,"user_tz":-330,"elapsed":4700,"user":{"displayName":"Anuj Raghani","photoUrl":"","userId":"06136699931339747993"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"source":["remove_outliers(df1,'mpg',2)\n","df1.shape"],"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(388, 9)"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"code","metadata":{"id":"E0TfUvoWYFH5","colab_type":"code","outputId":"39cfe36c-3c8b-44c1-ee96-e7c44d9c5a2c","executionInfo":{"status":"ok","timestamp":1584513307820,"user_tz":-330,"elapsed":4691,"user":{"displayName":"Anuj Raghani","photoUrl":"","userId":"06136699931339747993"}},"colab":{"base_uri":"https://localhost:8080/","height":295}},"source":["#create a new dataframe from name and horsepower\n","\n","col_horsepower = df1['horsepower']\n","col_name = df1['name']\n","\n","result = pd.concat([col_name,col_horsepower],axis=1)\n","result.head(5)\n","\n","result1 = pd.concat([df1[0:2],df1[-2:]],axis=0)\n","\n","result1"],"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mpg</th>\n","      <th>cylinders</th>\n","      <th>displacement</th>\n","      <th>horsepower</th>\n","      <th>weight</th>\n","      <th>acceleration</th>\n","      <th>year</th>\n","      <th>origin</th>\n","      <th>name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>18.0</td>\n","      <td>8</td>\n","      <td>307.0</td>\n","      <td>18</td>\n","      <td>3504</td>\n","      <td>12.0</td>\n","      <td>70</td>\n","      <td>1</td>\n","      <td>chevrolet chevelle malibu</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>15.0</td>\n","      <td>8</td>\n","      <td>350.0</td>\n","      <td>15</td>\n","      <td>3693</td>\n","      <td>11.5</td>\n","      <td>70</td>\n","      <td>1</td>\n","      <td>buick skylark 320</td>\n","    </tr>\n","    <tr>\n","      <th>396</th>\n","      <td>28.0</td>\n","      <td>4</td>\n","      <td>120.0</td>\n","      <td>28</td>\n","      <td>2625</td>\n","      <td>18.6</td>\n","      <td>82</td>\n","      <td>1</td>\n","      <td>ford ranger</td>\n","    </tr>\n","    <tr>\n","      <th>397</th>\n","      <td>31.0</td>\n","      <td>4</td>\n","      <td>119.0</td>\n","      <td>31</td>\n","      <td>2720</td>\n","      <td>19.4</td>\n","      <td>82</td>\n","      <td>1</td>\n","      <td>chevy s-10</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["      mpg  cylinders  displacement  ... year  origin                       name\n","0    18.0          8         307.0  ...   70       1  chevrolet chevelle malibu\n","1    15.0          8         350.0  ...   70       1          buick skylark 320\n","396  28.0          4         120.0  ...   82       1                ford ranger\n","397  31.0          4         119.0  ...   82       1                 chevy s-10\n","\n","[4 rows x 9 columns]"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"code","metadata":{"id":"maBbTVVUZq0x","colab_type":"code","outputId":"aa05aba0-da7e-4a01-8c80-561b2311d95b","executionInfo":{"status":"ok","timestamp":1584513307820,"user_tz":-330,"elapsed":4683,"user":{"displayName":"Anuj Raghani","photoUrl":"","userId":"06136699931339747993"}},"colab":{"base_uri":"https://localhost:8080/","height":139}},"source":["df1[['mpg','cylinders','displacement','horsepower','weight','acceleration','year','origin']].values"],"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[18.0, 8, 307.0, ..., 12.0, 70, 1],\n","       [15.0, 8, 350.0, ..., 11.5, 70, 1],\n","       [18.0, 8, 318.0, ..., 11.0, 70, 1],\n","       ...,\n","       [32.0, 4, 135.0, ..., 11.6, 82, 1],\n","       [28.0, 4, 120.0, ..., 18.6, 82, 1],\n","       [31.0, 4, 119.0, ..., 19.4, 82, 1]], dtype=object)"]},"metadata":{"tags":[]},"execution_count":9}]},{"cell_type":"code","metadata":{"id":"eHQHElQRaYS-","colab_type":"code","outputId":"42cab6a2-d4f8-4d17-a1e4-46bd3c3cf444","executionInfo":{"status":"ok","timestamp":1584513307821,"user_tz":-330,"elapsed":4675,"user":{"displayName":"Anuj Raghani","photoUrl":"","userId":"06136699931339747993"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"source":["#to shuffle the data\n","df1 = df1.reindex(np.random.permutation(df1.index))\n","filename_write = os.path.join(\".\",\"auto_mpg_shuffle.csv\")\n","\n","df1.to_csv(filename_write,index=False)\n","print(\"file saved\")"],"execution_count":10,"outputs":[{"output_type":"stream","text":["file saved\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Q78bnvzQnz1t","colab_type":"code","outputId":"e0dbfdd6-5c7a-4d4c-c8d4-740188c3ed2b","executionInfo":{"status":"ok","timestamp":1584513307821,"user_tz":-330,"elapsed":4666,"user":{"displayName":"Anuj Raghani","photoUrl":"","userId":"06136699931339747993"}},"colab":{"base_uri":"https://localhost:8080/","height":171}},"source":["dummies = pd.get_dummies(['a','b','c','d'],prefix=\"area\")\n","\n","dummies"],"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>area_a</th>\n","      <th>area_b</th>\n","      <th>area_c</th>\n","      <th>area_d</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   area_a  area_b  area_c  area_d\n","0       1       0       0       0\n","1       0       1       0       0\n","2       0       0       1       0\n","3       0       0       0       1"]},"metadata":{"tags":[]},"execution_count":11}]},{"cell_type":"code","metadata":{"id":"iPHfrUWNpmvx","colab_type":"code","outputId":"e08d4361-ce75-4a5f-89c1-231e5598b151","executionInfo":{"status":"ok","timestamp":1584513307822,"user_tz":-330,"elapsed":4659,"user":{"displayName":"Anuj Raghani","photoUrl":"","userId":"06136699931339747993"}},"colab":{"base_uri":"https://localhost:8080/","height":326}},"source":["df1 = df1.reindex(np.random.permutation(df.index))\n","df.reset_index(inplace=True,drop=True)\n","df1.head(5)"],"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mpg</th>\n","      <th>cylinders</th>\n","      <th>displacement</th>\n","      <th>horsepower</th>\n","      <th>weight</th>\n","      <th>acceleration</th>\n","      <th>year</th>\n","      <th>origin</th>\n","      <th>name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>17</th>\n","      <td>21.0</td>\n","      <td>6.0</td>\n","      <td>200.0</td>\n","      <td>21</td>\n","      <td>2587.0</td>\n","      <td>16.0</td>\n","      <td>70.0</td>\n","      <td>1.0</td>\n","      <td>ford maverick</td>\n","    </tr>\n","    <tr>\n","      <th>367</th>\n","      <td>28.0</td>\n","      <td>4.0</td>\n","      <td>112.0</td>\n","      <td>28</td>\n","      <td>2605.0</td>\n","      <td>19.6</td>\n","      <td>82.0</td>\n","      <td>1.0</td>\n","      <td>chevrolet cavalier</td>\n","    </tr>\n","    <tr>\n","      <th>38</th>\n","      <td>14.0</td>\n","      <td>8.0</td>\n","      <td>350.0</td>\n","      <td>14</td>\n","      <td>4209.0</td>\n","      <td>12.0</td>\n","      <td>71.0</td>\n","      <td>1.0</td>\n","      <td>chevrolet impala</td>\n","    </tr>\n","    <tr>\n","      <th>200</th>\n","      <td>18.0</td>\n","      <td>6.0</td>\n","      <td>250.0</td>\n","      <td>18</td>\n","      <td>3574.0</td>\n","      <td>21.0</td>\n","      <td>76.0</td>\n","      <td>1.0</td>\n","      <td>ford granada ghia</td>\n","    </tr>\n","    <tr>\n","      <th>211</th>\n","      <td>16.5</td>\n","      <td>6.0</td>\n","      <td>168.0</td>\n","      <td>16.5</td>\n","      <td>3820.0</td>\n","      <td>16.7</td>\n","      <td>76.0</td>\n","      <td>2.0</td>\n","      <td>mercedes-benz 280s</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["      mpg  cylinders  displacement  ...  year  origin                name\n","17   21.0        6.0         200.0  ...  70.0     1.0       ford maverick\n","367  28.0        4.0         112.0  ...  82.0     1.0  chevrolet cavalier\n","38   14.0        8.0         350.0  ...  71.0     1.0    chevrolet impala\n","200  18.0        6.0         250.0  ...  76.0     1.0   ford granada ghia\n","211  16.5        6.0         168.0  ...  76.0     2.0  mercedes-benz 280s\n","\n","[5 rows x 9 columns]"]},"metadata":{"tags":[]},"execution_count":12}]},{"cell_type":"code","metadata":{"id":"_wiyehwOtLDQ","colab_type":"code","outputId":"41f5698c-711b-4744-b9da-c79dc450f1b5","executionInfo":{"status":"ok","timestamp":1584513307822,"user_tz":-330,"elapsed":4650,"user":{"displayName":"Anuj Raghani","photoUrl":"","userId":"06136699931339747993"}},"colab":{"base_uri":"https://localhost:8080/","height":361}},"source":["#sorting the values\n","df1 = df1.sort_values(by='name',ascending=True)\n","df1.head(5)\n"],"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mpg</th>\n","      <th>cylinders</th>\n","      <th>displacement</th>\n","      <th>horsepower</th>\n","      <th>weight</th>\n","      <th>acceleration</th>\n","      <th>year</th>\n","      <th>origin</th>\n","      <th>name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>96</th>\n","      <td>13.0</td>\n","      <td>8.0</td>\n","      <td>360.0</td>\n","      <td>13</td>\n","      <td>3821.0</td>\n","      <td>11.0</td>\n","      <td>73.0</td>\n","      <td>1.0</td>\n","      <td>amc ambassador brougham</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>15.0</td>\n","      <td>8.0</td>\n","      <td>390.0</td>\n","      <td>15</td>\n","      <td>3850.0</td>\n","      <td>8.5</td>\n","      <td>70.0</td>\n","      <td>1.0</td>\n","      <td>amc ambassador dpl</td>\n","    </tr>\n","    <tr>\n","      <th>66</th>\n","      <td>17.0</td>\n","      <td>8.0</td>\n","      <td>304.0</td>\n","      <td>17</td>\n","      <td>3672.0</td>\n","      <td>11.5</td>\n","      <td>72.0</td>\n","      <td>1.0</td>\n","      <td>amc ambassador sst</td>\n","    </tr>\n","    <tr>\n","      <th>257</th>\n","      <td>19.4</td>\n","      <td>6.0</td>\n","      <td>232.0</td>\n","      <td>19.4</td>\n","      <td>3210.0</td>\n","      <td>17.2</td>\n","      <td>78.0</td>\n","      <td>1.0</td>\n","      <td>amc concord</td>\n","    </tr>\n","    <tr>\n","      <th>315</th>\n","      <td>24.3</td>\n","      <td>4.0</td>\n","      <td>151.0</td>\n","      <td>24.3</td>\n","      <td>3003.0</td>\n","      <td>20.1</td>\n","      <td>80.0</td>\n","      <td>1.0</td>\n","      <td>amc concord</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["      mpg  cylinders  displacement  ...  year  origin                     name\n","96   13.0        8.0         360.0  ...  73.0     1.0  amc ambassador brougham\n","9    15.0        8.0         390.0  ...  70.0     1.0       amc ambassador dpl\n","66   17.0        8.0         304.0  ...  72.0     1.0       amc ambassador sst\n","257  19.4        6.0         232.0  ...  78.0     1.0              amc concord\n","315  24.3        4.0         151.0  ...  80.0     1.0              amc concord\n","\n","[5 rows x 9 columns]"]},"metadata":{"tags":[]},"execution_count":13}]},{"cell_type":"code","metadata":{"id":"fF8_ZiOzt0-7","colab_type":"code","outputId":"947938c8-e1a5-4258-9a58-87b106f80a80","executionInfo":{"status":"ok","timestamp":1584513307823,"user_tz":-330,"elapsed":4643,"user":{"displayName":"Anuj Raghani","photoUrl":"","userId":"06136699931339747993"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"source":["#grouping the dataset\n","\n","df2 = df1.groupby('cylinders')['mpg','weight'].mean()\n","\n","df3 = df1.groupby('cylinders')['mpg'].count().to_dict()\n","\n","df3"],"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{3.0: 4, 4.0: 194, 5.0: 3, 6.0: 84, 8.0: 103}"]},"metadata":{"tags":[]},"execution_count":14}]},{"cell_type":"code","metadata":{"id":"13tWEkqT9o_B","colab_type":"code","outputId":"a3e293cb-a495-4cc9-fe19-c8cd65e6311d","executionInfo":{"status":"ok","timestamp":1584513307823,"user_tz":-330,"elapsed":4634,"user":{"displayName":"Anuj Raghani","photoUrl":"","userId":"06136699931339747993"}},"colab":{"base_uri":"https://localhost:8080/","height":87}},"source":["#use maps on columns of dataframe\n","df1[\"origin_name\"] = df1[\"origin\"].map({1: 'North America',2: 'Europe',3:'Asia'})\n","df1['origin_name'].value_counts()"],"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["North America    249\n","Asia              75\n","Europe            64\n","Name: origin_name, dtype: int64"]},"metadata":{"tags":[]},"execution_count":15}]},{"cell_type":"code","metadata":{"id":"jYEt1Wck-rkR","colab_type":"code","outputId":"a91651e6-009f-4678-a13e-87d2ddac6292","executionInfo":{"status":"ok","timestamp":1584513307824,"user_tz":-330,"elapsed":4626,"user":{"displayName":"Anuj Raghani","photoUrl":"","userId":"06136699931339747993"}},"colab":{"base_uri":"https://localhost:8080/","height":208}},"source":["effi = df1.apply(lambda x: x['displacement']/x['horsepower'], axis=1)\n","\n","display(effi[0:10])"],"execution_count":16,"outputs":[{"output_type":"display_data","data":{"text/plain":["96     27.692308\n","9      26.000000\n","66     17.882353\n","257    11.958763\n","315     6.213992\n","261    14.254144\n","374     6.565217\n","283    11.485149\n","107    12.888889\n","24      9.476190\n","dtype: float64"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"kHwZS59Y_3BA","colab_type":"code","outputId":"593f4250-3b1d-45c9-ae46-0794f8feb0d6","executionInfo":{"status":"ok","timestamp":1584513335057,"user_tz":-330,"elapsed":31851,"user":{"displayName":"Anuj Raghani","photoUrl":"","userId":"06136699931339747993"}},"colab":{"base_uri":"https://localhost:8080/","height":202}},"source":["df4 = pd.read_csv(\"https://www.irs.gov/pub/irs-soi/16zpallagi.csv\")\n","\n","df4 = df4.loc[(df4[\"zipcode\"] != 0) & (df4[\"zipcode\"] != 99999) , [\"STATE\",\"zipcode\",\"agi_stub\",\"N1\"]]\n","\n","median = {1:12500,2:37500,3:62500,4:87500,5:112500,6:212500}\n","\n","df4['agi_stub'] = df4.agi_stub.map(median)\n","\n","groups = df4.groupby(by = 'zipcode')\n","\n","df5 = pd.DataFrame(groups.apply(lambda x: sum(x['N1']*x['agi_stub'])/sum(x['N1']))).reset_index()\n","\n","df5.columns = [\"zipcode\",\"agi_estimate\"]\n","\n","df5.head()"],"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>zipcode</th>\n","      <th>agi_estimate</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1001</td>\n","      <td>52895.322940</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1002</td>\n","      <td>64528.451001</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1003</td>\n","      <td>15441.176471</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1005</td>\n","      <td>54694.092827</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1007</td>\n","      <td>63654.353562</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   zipcode  agi_estimate\n","0     1001  52895.322940\n","1     1002  64528.451001\n","2     1003  15441.176471\n","3     1005  54694.092827\n","4     1007  63654.353562"]},"metadata":{"tags":[]},"execution_count":17}]},{"cell_type":"code","metadata":{"id":"lFeHHAPBrf9P","colab_type":"code","outputId":"4827844b-2a24-487c-d0a1-75ad336c2b8f","executionInfo":{"status":"ok","timestamp":1584513352693,"user_tz":-330,"elapsed":49478,"user":{"displayName":"Anuj Raghani","photoUrl":"","userId":"06136699931339747993"}},"colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["from tensorflow.keras.layers import Dense, Activation\n","from tensorflow.keras.models import Sequential\n","import io\n","import pandas as pd\n","import numpy as np\n","import os\n","import requests\n","from sklearn import metrics\n","\n","df6 = pd.read_csv(\"https://data.heatonresearch.com/data/t81-558/auto-mpg.csv\",na_values=['NA','?'])\n","\n","cars = df6[\"name\"]\n","\n","df6[\"horsepower\"] = df6[\"horsepower\"].fillna(df6[\"horsepower\"].median())\n","\n","\n","x = df6[['cylinders','displacement','horsepower','weight','acceleration','year','origin']].values\n","\n","y = df6['mpg'].values\n","\n","model = Sequential()\n","model.add(Dense(25,input_dim=x.shape[1],activation=\"relu\"))\n","model.add(Dense(10,activation=\"relu\"))\n","model.add(Dense(1))\n","\n","model.compile(loss=\"mean_squared_error\",optimizer=\"adam\",metrics=[\"accuracy\"])\n","model.fit(x,y,verbose=2,epochs=100)\n","\n","print(model.summary())\n","\n","pred = model.predict(x)\n","\n","print(\"the accuracy score is {}\".format(np.sqrt(metrics.mean_squared_error(pred,y))))\n","\n","model.save(\"model.h5\")\n","\n","\n","\n","\n","\n","\n","\n"],"execution_count":18,"outputs":[{"output_type":"display_data","data":{"text/html":["<p style=\"color: red;\">\n","The default version of TensorFlow in Colab will soon switch to TensorFlow 2.x.<br>\n","We recommend you <a href=\"https://www.tensorflow.org/guide/migrate\" target=\"_blank\">upgrade</a> now \n","or ensure your notebook will continue to use TensorFlow 1.x via the <code>%tensorflow_version 1.x</code> magic:\n","<a href=\"https://colab.research.google.com/notebooks/tensorflow_version.ipynb\" target=\"_blank\">more info</a>.</p>\n"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["WARNING:tensorflow:From /tensorflow-1.15.0/python3.6/tensorflow_core/python/ops/resource_variable_ops.py:1630: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.\n","Instructions for updating:\n","If using Keras pass *_constraint arguments to layers.\n","Train on 398 samples\n","Epoch 1/100\n","398/398 - 2s - loss: 22548.4507 - acc: 0.0000e+00\n","Epoch 2/100\n","398/398 - 0s - loss: 691.8856 - acc: 0.0000e+00\n","Epoch 3/100\n","398/398 - 0s - loss: 408.8116 - acc: 0.0000e+00\n","Epoch 4/100\n","398/398 - 0s - loss: 402.4977 - acc: 0.0000e+00\n","Epoch 5/100\n","398/398 - 0s - loss: 380.7488 - acc: 0.0000e+00\n","Epoch 6/100\n","398/398 - 0s - loss: 352.4874 - acc: 0.0000e+00\n","Epoch 7/100\n","398/398 - 0s - loss: 321.0474 - acc: 0.0000e+00\n","Epoch 8/100\n","398/398 - 0s - loss: 289.9201 - acc: 0.0000e+00\n","Epoch 9/100\n","398/398 - 0s - loss: 260.6578 - acc: 0.0000e+00\n","Epoch 10/100\n","398/398 - 0s - loss: 237.3388 - acc: 0.0000e+00\n","Epoch 11/100\n","398/398 - 0s - loss: 218.1768 - acc: 0.0000e+00\n","Epoch 12/100\n","398/398 - 0s - loss: 206.0057 - acc: 0.0000e+00\n","Epoch 13/100\n","398/398 - 0s - loss: 199.4435 - acc: 0.0000e+00\n","Epoch 14/100\n","398/398 - 0s - loss: 195.7355 - acc: 0.0000e+00\n","Epoch 15/100\n","398/398 - 0s - loss: 194.2353 - acc: 0.0000e+00\n","Epoch 16/100\n","398/398 - 0s - loss: 193.7160 - acc: 0.0000e+00\n","Epoch 17/100\n","398/398 - 0s - loss: 193.4803 - acc: 0.0000e+00\n","Epoch 18/100\n","398/398 - 0s - loss: 193.3833 - acc: 0.0000e+00\n","Epoch 19/100\n","398/398 - 0s - loss: 193.2505 - acc: 0.0000e+00\n","Epoch 20/100\n","398/398 - 0s - loss: 193.0674 - acc: 0.0000e+00\n","Epoch 21/100\n","398/398 - 0s - loss: 192.9531 - acc: 0.0000e+00\n","Epoch 22/100\n","398/398 - 0s - loss: 192.8073 - acc: 0.0000e+00\n","Epoch 23/100\n","398/398 - 0s - loss: 192.6444 - acc: 0.0000e+00\n","Epoch 24/100\n","398/398 - 0s - loss: 192.6268 - acc: 0.0000e+00\n","Epoch 25/100\n","398/398 - 0s - loss: 192.3137 - acc: 0.0000e+00\n","Epoch 26/100\n","398/398 - 0s - loss: 192.1247 - acc: 0.0000e+00\n","Epoch 27/100\n","398/398 - 0s - loss: 191.9372 - acc: 0.0000e+00\n","Epoch 28/100\n","398/398 - 0s - loss: 191.7732 - acc: 0.0000e+00\n","Epoch 29/100\n","398/398 - 0s - loss: 191.7300 - acc: 0.0000e+00\n","Epoch 30/100\n","398/398 - 0s - loss: 191.4620 - acc: 0.0000e+00\n","Epoch 31/100\n","398/398 - 0s - loss: 191.3305 - acc: 0.0000e+00\n","Epoch 32/100\n","398/398 - 0s - loss: 191.0960 - acc: 0.0000e+00\n","Epoch 33/100\n","398/398 - 0s - loss: 190.9059 - acc: 0.0000e+00\n","Epoch 34/100\n","398/398 - 0s - loss: 190.8950 - acc: 0.0000e+00\n","Epoch 35/100\n","398/398 - 0s - loss: 190.5689 - acc: 0.0000e+00\n","Epoch 36/100\n","398/398 - 0s - loss: 190.3799 - acc: 0.0000e+00\n","Epoch 37/100\n","398/398 - 0s - loss: 190.2159 - acc: 0.0000e+00\n","Epoch 38/100\n","398/398 - 0s - loss: 190.0491 - acc: 0.0000e+00\n","Epoch 39/100\n","398/398 - 0s - loss: 189.8094 - acc: 0.0000e+00\n","Epoch 40/100\n","398/398 - 0s - loss: 189.6607 - acc: 0.0000e+00\n","Epoch 41/100\n","398/398 - 0s - loss: 189.4394 - acc: 0.0000e+00\n","Epoch 42/100\n","398/398 - 0s - loss: 189.2792 - acc: 0.0000e+00\n","Epoch 43/100\n","398/398 - 0s - loss: 189.0513 - acc: 0.0000e+00\n","Epoch 44/100\n","398/398 - 0s - loss: 188.9990 - acc: 0.0000e+00\n","Epoch 45/100\n","398/398 - 0s - loss: 188.7937 - acc: 0.0000e+00\n","Epoch 46/100\n","398/398 - 0s - loss: 188.4907 - acc: 0.0000e+00\n","Epoch 47/100\n","398/398 - 0s - loss: 188.6269 - acc: 0.0000e+00\n","Epoch 48/100\n","398/398 - 0s - loss: 188.0572 - acc: 0.0000e+00\n","Epoch 49/100\n","398/398 - 0s - loss: 187.9487 - acc: 0.0000e+00\n","Epoch 50/100\n","398/398 - 0s - loss: 187.7687 - acc: 0.0000e+00\n","Epoch 51/100\n","398/398 - 0s - loss: 187.5576 - acc: 0.0000e+00\n","Epoch 52/100\n","398/398 - 0s - loss: 187.4287 - acc: 0.0000e+00\n","Epoch 53/100\n","398/398 - 0s - loss: 187.1230 - acc: 0.0000e+00\n","Epoch 54/100\n","398/398 - 0s - loss: 186.8909 - acc: 0.0000e+00\n","Epoch 55/100\n","398/398 - 0s - loss: 187.1524 - acc: 0.0000e+00\n","Epoch 56/100\n","398/398 - 0s - loss: 186.5817 - acc: 0.0000e+00\n","Epoch 57/100\n","398/398 - 0s - loss: 186.3953 - acc: 0.0000e+00\n","Epoch 58/100\n","398/398 - 0s - loss: 186.1453 - acc: 0.0000e+00\n","Epoch 59/100\n","398/398 - 0s - loss: 186.4201 - acc: 0.0000e+00\n","Epoch 60/100\n","398/398 - 0s - loss: 185.7849 - acc: 0.0000e+00\n","Epoch 61/100\n","398/398 - 0s - loss: 185.5447 - acc: 0.0000e+00\n","Epoch 62/100\n","398/398 - 0s - loss: 185.3304 - acc: 0.0000e+00\n","Epoch 63/100\n","398/398 - 0s - loss: 185.3972 - acc: 0.0000e+00\n","Epoch 64/100\n","398/398 - 0s - loss: 184.6814 - acc: 0.0000e+00\n","Epoch 65/100\n","398/398 - 0s - loss: 184.6727 - acc: 0.0000e+00\n","Epoch 66/100\n","398/398 - 0s - loss: 184.4587 - acc: 0.0000e+00\n","Epoch 67/100\n","398/398 - 0s - loss: 184.2389 - acc: 0.0000e+00\n","Epoch 68/100\n","398/398 - 0s - loss: 184.3468 - acc: 0.0000e+00\n","Epoch 69/100\n","398/398 - 0s - loss: 183.7793 - acc: 0.0000e+00\n","Epoch 70/100\n","398/398 - 0s - loss: 183.5414 - acc: 0.0000e+00\n","Epoch 71/100\n","398/398 - 0s - loss: 183.4151 - acc: 0.0000e+00\n","Epoch 72/100\n","398/398 - 0s - loss: 183.1848 - acc: 0.0000e+00\n","Epoch 73/100\n","398/398 - 0s - loss: 183.1621 - acc: 0.0000e+00\n","Epoch 74/100\n","398/398 - 0s - loss: 183.0567 - acc: 0.0000e+00\n","Epoch 75/100\n","398/398 - 0s - loss: 182.6736 - acc: 0.0000e+00\n","Epoch 76/100\n","398/398 - 0s - loss: 182.2805 - acc: 0.0000e+00\n","Epoch 77/100\n","398/398 - 0s - loss: 182.1713 - acc: 0.0000e+00\n","Epoch 78/100\n","398/398 - 0s - loss: 181.9478 - acc: 0.0000e+00\n","Epoch 79/100\n","398/398 - 0s - loss: 181.8109 - acc: 0.0000e+00\n","Epoch 80/100\n","398/398 - 0s - loss: 181.5490 - acc: 0.0000e+00\n","Epoch 81/100\n","398/398 - 0s - loss: 181.2222 - acc: 0.0000e+00\n","Epoch 82/100\n","398/398 - 0s - loss: 180.8723 - acc: 0.0000e+00\n","Epoch 83/100\n","398/398 - 0s - loss: 181.0794 - acc: 0.0000e+00\n","Epoch 84/100\n","398/398 - 0s - loss: 180.4178 - acc: 0.0000e+00\n","Epoch 85/100\n","398/398 - 0s - loss: 180.2855 - acc: 0.0000e+00\n","Epoch 86/100\n","398/398 - 0s - loss: 180.2942 - acc: 0.0000e+00\n","Epoch 87/100\n","398/398 - 0s - loss: 179.8157 - acc: 0.0000e+00\n","Epoch 88/100\n","398/398 - 0s - loss: 179.7344 - acc: 0.0000e+00\n","Epoch 89/100\n","398/398 - 0s - loss: 179.4535 - acc: 0.0000e+00\n","Epoch 90/100\n","398/398 - 0s - loss: 179.0661 - acc: 0.0000e+00\n","Epoch 91/100\n","398/398 - 0s - loss: 178.9068 - acc: 0.0000e+00\n","Epoch 92/100\n","398/398 - 0s - loss: 178.6352 - acc: 0.0000e+00\n","Epoch 93/100\n","398/398 - 0s - loss: 178.5558 - acc: 0.0000e+00\n","Epoch 94/100\n","398/398 - 0s - loss: 178.3422 - acc: 0.0000e+00\n","Epoch 95/100\n","398/398 - 0s - loss: 177.9411 - acc: 0.0000e+00\n","Epoch 96/100\n","398/398 - 0s - loss: 177.9217 - acc: 0.0000e+00\n","Epoch 97/100\n","398/398 - 0s - loss: 177.4700 - acc: 0.0000e+00\n","Epoch 98/100\n","398/398 - 0s - loss: 177.1438 - acc: 0.0000e+00\n","Epoch 99/100\n","398/398 - 0s - loss: 176.8248 - acc: 0.0000e+00\n","Epoch 100/100\n","398/398 - 0s - loss: 176.7142 - acc: 0.0000e+00\n","Model: \"sequential\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","dense (Dense)                (None, 25)                200       \n","_________________________________________________________________\n","dense_1 (Dense)              (None, 10)                260       \n","_________________________________________________________________\n","dense_2 (Dense)              (None, 1)                 11        \n","=================================================================\n","Total params: 471\n","Trainable params: 471\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","the accuracy score is 13.283736524879952\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"N3IDye4M0hqQ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":291},"outputId":"0918fe06-3583-48c8-ed8a-678de4acbd2c","executionInfo":{"status":"ok","timestamp":1584513833847,"user_tz":-330,"elapsed":1772,"user":{"displayName":"Anuj Raghani","photoUrl":"","userId":"06136699931339747993"}}},"source":["df6 = df6.iloc[np.random.permutation(df6.shape[0])]\n","df6.head()"],"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mpg</th>\n","      <th>cylinders</th>\n","      <th>displacement</th>\n","      <th>horsepower</th>\n","      <th>weight</th>\n","      <th>acceleration</th>\n","      <th>year</th>\n","      <th>origin</th>\n","      <th>name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>274</th>\n","      <td>20.3</td>\n","      <td>5</td>\n","      <td>131.0</td>\n","      <td>103.0</td>\n","      <td>2830</td>\n","      <td>15.9</td>\n","      <td>78</td>\n","      <td>2</td>\n","      <td>audi 5000</td>\n","    </tr>\n","    <tr>\n","      <th>367</th>\n","      <td>28.0</td>\n","      <td>4</td>\n","      <td>112.0</td>\n","      <td>88.0</td>\n","      <td>2605</td>\n","      <td>19.6</td>\n","      <td>82</td>\n","      <td>1</td>\n","      <td>chevrolet cavalier</td>\n","    </tr>\n","    <tr>\n","      <th>385</th>\n","      <td>38.0</td>\n","      <td>4</td>\n","      <td>91.0</td>\n","      <td>67.0</td>\n","      <td>1995</td>\n","      <td>16.2</td>\n","      <td>82</td>\n","      <td>3</td>\n","      <td>datsun 310 gx</td>\n","    </tr>\n","    <tr>\n","      <th>273</th>\n","      <td>23.9</td>\n","      <td>4</td>\n","      <td>119.0</td>\n","      <td>97.0</td>\n","      <td>2405</td>\n","      <td>14.9</td>\n","      <td>78</td>\n","      <td>3</td>\n","      <td>datsun 200-sx</td>\n","    </tr>\n","    <tr>\n","      <th>197</th>\n","      <td>29.0</td>\n","      <td>4</td>\n","      <td>90.0</td>\n","      <td>70.0</td>\n","      <td>1937</td>\n","      <td>14.2</td>\n","      <td>76</td>\n","      <td>2</td>\n","      <td>vw rabbit</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["      mpg  cylinders  displacement  ...  year  origin                name\n","274  20.3          5         131.0  ...    78       2           audi 5000\n","367  28.0          4         112.0  ...    82       1  chevrolet cavalier\n","385  38.0          4          91.0  ...    82       3       datsun 310 gx\n","273  23.9          4         119.0  ...    78       3       datsun 200-sx\n","197  29.0          4          90.0  ...    76       2           vw rabbit\n","\n","[5 rows x 9 columns]"]},"metadata":{"tags":[]},"execution_count":31}]}]}